<?php

namespace Insta\PlanningBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ScheduleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScheduleRepository extends EntityRepository
{

    /**
     * @param Schedule $schedule
     * @return bool
     */
    public function isRoomUsed(Schedule $schedule) {

        $qb = $this->createQueryBuilder('s')
            ->select('s')
            ->where('s.datetime <= :dateEnd')
            ->andWhere('s.datetime LIKE :today')
            ->andWhere('s.room = :room')
            ->setParameter('room', $schedule->getRoom())
            ->setParameter('today', '%'.$schedule->getDatetime()->format('Y-m-d').'%')
            ->setParameter('dateEnd', $schedule->getEndDatetime());

        /** @var Schedule[] $results */
        $results = $qb->getQuery()->getResult();

        foreach ($results as $result) {

            if ($result->getEndDatetime() > $schedule->getDatetime())
                return true;

        }

        return false;

    }

    /**
     * @param Schedule $schedule
     * @return array|Room[]
     */
    public function getEmptyRooms(Schedule $schedule) {

        $rooms = $this->getEntityManager()->getRepository('PlanningBundle:Room')->findAll();

        $qb = $this->createQueryBuilder('s')
            ->select('s')
            ->where('s.datetime <= :dateEnd')
            ->andWhere('s.datetime LIKE :today')
            ->andWhere('s.room = :room')
            ->setParameter('room', $schedule->getRoom())
            ->setParameter('today', '%'.$schedule->getDatetime()->format('Y-m-d').'%')
            ->setParameter('dateEnd', $schedule->getEndDatetime());

        /** @var Schedule[] $results */
        $results = $qb->getQuery()->getResult();

        foreach ($results as $idx => $result) {

            if (in_array($result->getRoom(), $rooms)) {
                unset($rooms[$idx]);
            }


        }

        return $rooms;

    }

}
